/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

buildscript {
    dependencies {
    }
    repositories {
        mavenLocal()
        jcenter()
    }
}

//if the project has a value for the passed property (i.e from the cmd line via -PpropName=xxx)
//use that, else use a default value
ext.getPropertyOrDefault = { propName, defaultValue ->
    def val;
    if (project.hasProperty(propName) && project.getProperty(propName) != "unspecified") {
        val = project.getProperty(propName)
        println "Using propery $propName with value $val"
    } else {
        val = defaultValue
        println "Propery $propName has no value, using default value $val"
    }
    return val;
}

ext.versions = [
    //----------Stroom-Annotations-----
    stroomQueryElastic: getPropertyOrDefault('version', 'SNAPSHOT'),

    akka: '2.5.9',
    curator: '2.12.0',
    dropwizard: '1.2.0',
    elasticSearch: '5.6.3',
    eventLogging: 'v3.1.1_schema-v3.1.2',
    guice: "com.google.inject:guice:4.0",
    shiro: '1.3.2',

    //same version for both stroom-query-api and stroom-query-common
    stroomQuery: 'SNAPSHOT',
    stroomExpression: 'v1.0.1',
    stroomTestData: 'v0.1.1'
]

allprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group = 'stroom-query-elastic'
    version = versions.stroomQueryElastic
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://dl.bintray.com/stroom/event-logging" }
        maven { url "https://dl.bintray.com/stroom/stroom" }
    }
}

ext.testVersions = [
    junit: '4.12'
]

ext.deps = [
    //------Stroom-libs---------------
    eventLogging: "event-logging:event-logging:$versions.eventLogging",
    stroomExpression: "stroom:stroom-expression:$versions.stroomExpression",
    stroomQueryApi: "stroom:stroom-query-api:$versions.stroomQuery",
    stroomQueryCommon: "stroom:stroom-query-common:$versions.stroomQuery",
    stroomQueryAudit: "stroom:stroom-query-audit:$versions.stroomQuery",
    stroomQueryAuthorisation: "stroom:stroom-query-authorisation:$versions.stroomQuery",
    stroomQueryJooq: "stroom:stroom-query-jooq:$versions.stroomQuery",
    stroomTestData: "stroom:stroom-test-data:$versions.stroomTestData",

    //------3rd Party-----------------
    akka_actor: "com.typesafe.akka:akka-actor_2.12:$versions.akka",
    akka_cluster_tools: "com.typesafe.akka:akka-cluster-tools_2.12:$versions.akka",
    akka_cluster_metrics: "com.typesafe.akka:akka-cluster-metrics_2.12:$versions.akka",

    akka_http: "com.typesafe.akka:akka-http_2.12:10.1.1",
    akka_stream: "com.typesafe.akka:akka-stream_2.12:2.5.11",
    akka_http_jackson: "com.typesafe.akka:akka-http-jackson_2.12:10.1.1", // JSON support over HTTP

    bcrypt: 'de.svenkubiak:jBCrypt:0.4.1',
    curator_client: "org.apache.curator:curator-client:$versions.curator",
    curator_framework: "org.apache.curator:curator-framework:$versions.curator",
    curator_recipies: "org.apache.curator:curator-recipes:$versions.curator",
    curator_service_discovery: "org.apache.curator:curator-x-discovery:$versions.curator",
    dropwizard_core: "io.dropwizard:dropwizard-core:$versions.dropwizard",
    dropwizard_auth: "io.dropwizard:dropwizard-auth:$versions.dropwizard",
    dropwizard_auth_jwt: "com.github.toastshaman:dropwizard-auth-jwt:1.0.2-0",
    elasticSearch: "org.elasticsearch.client:transport:$versions.elasticSearch",
    flyway_core: "org.flywaydb:flyway-core:4.0.3",
    guice: "com.google.inject:guice:4.0",
    jose4j: "org.bitbucket.b_c:jose4j:0.5.2",
    kafka: 'org.apache.kafka:kafka-clients:0.10.0.1', //CDH5.10 uses kafka 10.0, Kafka <10.2 is picky about client and server versions.
    mysql_connector_java: "mysql:mysql-connector-java:5.1.40",
    mariadb_connector: 'org.mariadb.jdbc:mariadb-java-client:2.0.2',
    slf4j: "org.slf4j:slf4j-api:1.7.24",
    shiro_core: "org.apache.shiro:shiro-core:$versions.shiro",
    simple_java_mail: 'org.simplejavamail:simple-java-mail:4.3.0'
]

ext.testDeps = [
    akka_test: "com.typesafe.akka:akka-testkit_2.12:$versions.akka",
    apache_commons: 'org.apache.directory.studio:org.apache.commons.io:2.4',
    junit: "junit:junit:$testVersions.junit",
    assertj: 'org.assertj:assertj-core:3.8.0',
    dropwizard_testing: "io.dropwizard:dropwizard-testing:$versions.dropwizard",
    fuel: 'com.github.kittinunf.fuel:fuel:1.7.0',
    moshi: 'com.squareup.moshi:moshi:1.5.0',
    mockito_core: 'org.mockito:mockito-core:2.0.2-beta',
    wiremock: 'com.github.tomakehurst:wiremock:2.12.0',
    stroomQueryTesting: "stroom:stroom-query-testing:$versions.stroomQuery"
]
